(()=>{var t={136:(t,e,s)=>{s(891);const i=s(568);t.exports=class{constructor(t,e,s,h,a,n){this.maxHealth=t,this.currHealth=t,this.hitChance=e,this.damage=s,this.armor=h,this.lifeSteal=0,this.pos=a,this.name=n,this.healthBar=new i(this.maxHealth,this.pos)}attack(t){let e=Math.max(this.damage-t.armor,1);return t.takeDamage(e),this.heal(Math.ceil(this.lifeSteal*e)),e}heal(t){this.currHealth+t>this.maxHealth?(this.currHealth=this.maxHealth,this.healthBar.setHealth(this.maxHealth)):(this.currHealth+=t,this.healthBar.addHealth(t))}takeDamage(t){this.currHealth-=t,this.healthBar.subtractHealth(t)}attackHits(){return Math.random()<this.hitChance}}},657:(t,e,s)=>{const i=s(136);t.exports=class extends i{constructor(t,e,s,i,h,a,n,o){super(t,e,s,i,h,a),this.moveSpeed=n,this.xpGranted=o,this.alive=!0}move(){this.pos[0]=Math.max(100,this.pos[0]-this.moveSpeed)}grantXP(t){t.xp+=this.xpGranted}}},417:(t,e,s)=>{const i=s(507),h=s(398),a=s(824),n=s(829),o=s(742),d=s(401),l=s(891),r=s(988),p=700,c=400;t.exports=class{constructor(t){function e(t){t.applyStats(this.player),document.getElementById("overlay").style.display="none",this.gameView.play()}this.player=new i,this.enemies=[],this.itemManager=new a,this.combatCounter=0,this.fbSpawned=!1,this.bg1=new Image,this.bg2=new Image,this.bg3=new Image,this.bg4=new Image,this.bg1.src="./images/background/DarkForest/DarkForest_Background.png",this.bg2.src="./images/background/DarkForest/DarkForest_Middleground.png",this.bg4.src="./images/background/DarkForest/DarkForest_Foreground.png",this.spawnTimer=50,this.gameView=t,this.threeItems=this.itemManager.get3RandomItems(),this.event1=t=>{e.bind(this)(this.threeItems[0])},this.event2=t=>{e.bind(this)(this.threeItems[1])},this.event3=t=>{e.bind(this)(this.threeItems[2])}}draw(t){t.clearRect(0,0,p,c),t.drawImage(this.bg1,0,0,p,c),t.drawImage(this.bg2,0,0,p,c),t.drawImage(this.bg4,0,0,p,c),this.player.healthBar.draw([this.player.pos[0]+25,this.player.pos[1]+30]),this.canFight()?this.player.animateAttack():this.player.animateIdle();for(let t=0;t<this.enemies.length;t++)this.enemies[t].draw(this.enemies,t,this.player)}step(){this.updateStatDisplay(),this.spawnAnEnemy(),this.moveEnemies(),this.resolveAttacks(),this.player.xp>=100&&this.levelUp()}moveEnemies(){for(let t=0;t<this.enemies.length;t++)0!==t||this.canFight()?0!==t&&this.enemies[t].pos[0]-this.enemies[t].moveSpeed>this.enemies[t-1].pos[0]+50&&this.enemies[t].move():this.enemies[0].move()}spawnAnEnemy(){if(10===this.player.level){if(!this.fbSpawned){let t=new r;this.enemies.push(t),this.fbSpawned=!0}return void(0===this.enemies.length&&this.youWin())}let t,e=Math.max(this.player.level-3,0),s=this.player.level;switch(l.getRandomInt(e,s)){case 0:default:t=new h;break;case 1:case 2:case 3:t=new n;break;case 4:case 5:case 6:t=new o;break;case 7:case 8:case 9:t=new d}this.spawnTimer<1?(this.enemies.push(t),this.spawnTimer=50):this.spawnTimer--}resolveAttacks(){this.combatCounter++,this.combatCounter<5||(this.combatCounter=0,this.canFight()&&(this.player.attackHits()&&this.player.attack(this.enemies[0]),this.enemies[0].attackHits()&&this.enemies[0].attack(this.player),this.player.currHealth<=0&&this.gameOver()))}canFight(){return this.enemies[0]&&this.enemies[0].pos[0]<=100}gameOver(){this.gameView.pause(),document.getElementById("overlay-options").style.display="none",document.getElementById("overlay-end").style.display="block",document.getElementById("overlay").style.display="block"}youWin(){this.gameView.pause(),document.getElementById("overlay-options").style.display="none",document.getElementById("overlay-win").style.display="block",document.getElementById("overlay").style.display="block"}levelUp(){this.player.level++,this.player.xp=0,this.gameView.pause(),this.threeItems=this.itemManager.get3RandomItems(),document.getElementById("item1-pic").src=this.threeItems[0].img,document.getElementById("item2-pic").src=this.threeItems[1].img,document.getElementById("item3-pic").src=this.threeItems[2].img;const t=document.getElementById("item1-button");t.innerHTML=this.threeItems[0].name;const e=document.getElementById("item2-button");e.innerHTML=this.threeItems[1].name;const s=document.getElementById("item3-button");s.innerHTML=this.threeItems[2].name,document.getElementById("overlay").style.display="block",t.removeEventListener("click",this.event1),t.addEventListener("click",this.event1),e.removeEventListener("click",this.event2),e.addEventListener("click",this.event2),s.removeEventListener("click",this.event3),s.addEventListener("click",this.event3)}updateStatDisplay(){document.getElementById("player-level").innerHTML=`Level: ${this.player.level}`,document.getElementById("player-xp").innerHTML=`XP: ${this.player.xp}/100`,document.getElementById("player-health").innerHTML=`Health: ${this.player.currHealth}/${this.player.maxHealth}`,document.getElementById("player-hitchance").innerHTML=`Hit Chance: ${this.player.hitChance}`,document.getElementById("player-damage").innerHTML=`Damage: ${this.player.damage}`,document.getElementById("player-armor").innerHTML=`Armor: ${this.player.armor}`,document.getElementById("player-lifesteal").innerHTML=`Life Steal: ${this.player.lifeSteal}`}}},535:(t,e,s)=>{const i=s(417);t.exports=class{constructor(t){this.frame=0,this.ctx=t,this.paused=!1,this.frameCap=10,this.game=new i(this)}step(){this.frame++,this.frame<this.frameCap||(this.frame=0,this.paused||this.game.step(this.frame),this.game.draw(ctx,this.frame,this.step.bind(this))),window.requestAnimationFrame(this.step.bind(this))}pause(){this.paused=!0}play(){this.paused=!1}slideSpeed(t){this.frameCap=t}}},988:(t,e,s)=>{const i=s(657),h=74,a=57;t.exports=class extends i{constructor(){super(50,.8,25,8,[650,280],"Golem",10,0),this.sprite=new Image,this.sprite.src="./images/enemy/monsters/Golem/golem-Sheet.png",this.walkLoop=[0,1,2,3,4],this.walkIndex=0,this.attackLoop=[0,1,2,3,4,0,1,2,3,4],this.attackIndex=0,this.dieLoop=[3,4,5,0,1,2,3,4],this.dieIndex=0,this.idleLoop=[0,1,2,3],this.idleIndex=0}draw(t,e,s){this.healthBar.draw([this.pos[0]+50,this.pos[1]-5]),this.currHealth<=0?this.die(t,s):0===e&&this.pos[0]<=100?this.animateAttack():0===e&&this.pos[0]>100||t[e-1].pos[0]<this.pos[0]-60?this.walk():this.idle()}idle(){ctx.drawImage(this.sprite,h*this.idleLoop[this.idleIndex],0,h,a,this.pos[0],this.pos[1],148,114),this.idleIndex++,this.idleIndex>=this.idleLoop.length&&(this.idleIndex=0)}walk(){ctx.drawImage(this.sprite,h*this.walkLoop[this.walkIndex],a,h,a,this.pos[0],this.pos[1],148,114),this.walkIndex++,this.walkIndex>=this.walkLoop.length&&(this.walkIndex=0)}animateAttack(){let t=this.attackIndex>4?3:2;ctx.drawImage(this.sprite,h*this.attackLoop[this.attackIndex],a*t,h,a,this.pos[0],this.pos[1],148,114),this.attackIndex++,this.attackIndex>=this.attackLoop.length&&(this.attackIndex=0)}die(t,e){let s=this.dieIndex>2?6:5;ctx.drawImage(this.sprite,h*this.dieLoop[this.dieIndex],a*s,h,a,this.pos[0],this.pos[1],148,114),this.dieIndex++,this.dieIndex>=this.dieLoop.length&&(this.grantXP(e),t.shift())}}},568:t=>{t.exports=class{constructor(t,e){this.maxHealth=t,this.curHealth=t,this.pos=e}draw(t){if(this.pos=t,this.curHealth!==this.maxHealth){ctx.beginPath(),ctx.fillStyle="red",ctx.fillRect(this.pos[0],this.pos[1],50,10),ctx.fillStyle="green";let t=Math.max(this.curHealth/this.maxHealth,0);ctx.fillRect(this.pos[0],this.pos[1],50*t,10)}}subtractHealth(t){this.curHealth-=t}addHealth(t){this.curHealth+=t}setHealth(t){this.curHealth=t}}},87:t=>{t.exports=class{constructor(t,e,s,i,h,a,n){this.healthGranted=t,this.damageGranted=e,this.hitChanceGranted=s,this.armorGranted=i,this.lifeStealGranted=h,this.name=a,this.img=n}applyStats(t){t.maxHealth+=this.healthGranted,t.currHealth+=this.healthGranted,t.healthBar.maxHealth+=this.healthGranted,t.healthBar.curHealth+=this.healthGranted,t.damage+=this.damageGranted,t.hitChance+=this.hitChanceGranted,t.armor+=this.armorGranted,t.lifeSteal+=this.lifeStealGranted}}},824:(t,e,s)=>{const i=s(87),h=s(891);t.exports=class{constructor(){this.items=[],this.generateItemList()}generateItemList(){const t=new i(50,0,0,0,0,"Health Up","./images/items/health.png");this.items.push(t);const e=new i(0,3,0,0,0,"Damage Up","./images/items/damage.png");this.items.push(e);const s=new i(0,0,.05,0,0,"Hit Chance Up","./images/items/hitchance.png");this.items.push(s);const h=new i(0,0,0,3,0,"Armor Up","./images/items/armor.png");this.items.push(h);const a=new i(0,0,0,0,.1,"Lifesteal Up","./images/items/lifesteal.png");this.items.push(a);const n=new i(-50,0,0,0,.2,"Lifesteal +2/HP -1","./images/items/ls2hp-1.png");this.items.push(n)}get3RandomItems(){let t=[];for(;t.length<3;){let e=h.getRandomInt(0,this.items.length);t.includes(this.items[e])||t.push(this.items[e])}return t}}},507:(t,e,s)=>{const i=s(136);t.exports=class extends i{constructor(t="Player"){super(200,.7,5,0,[10,270],t),this.level=0,this.xp=0,this.sprite=new Image,this.sprite.src="./images/player/AnimatedPixelKnight/knight-sprite-sheet.png",this.attackLoop=[0,1,2,3,4],this.attackIndex=0,this.idleLoop=[1,2,3,4],this.idleIndex=0}animateAttack(){ctx.drawImage(this.sprite,90*this.attackLoop[this.attackIndex],80,90,80,this.pos[0],this.pos[1],135,120),this.attackIndex++,this.attackIndex>=this.attackLoop.length&&(this.attackIndex=0)}animateIdle(){ctx.drawImage(this.sprite,90*this.idleLoop[this.idleIndex],0,90,80,this.pos[0],this.pos[1],135,120),this.idleIndex++,this.idleIndex>=this.idleLoop.length&&(this.idleIndex=0)}}},398:(t,e,s)=>{const i=s(657),h=42;t.exports=class extends i{constructor(){super(10,.5,3,0,[650,350],"Rat",10,20),this.sprite=new Image,this.sprite.src="./images/enemy/monsters/Rat/rat-Sheet.png",this.walkLoop=[0,1,2,3],this.walkIndex=0,this.attackLoop=[0,1,2,3],this.attackIndex=0,this.dieLoop=[0,1,2,3],this.dieIndex=0,this.idleLoop=[0,1,2,3],this.idleIndex=0}draw(t,e,s){this.healthBar.draw(this.pos),this.currHealth<=0?this.die(t,s):0===e&&this.pos[0]<=100?this.animateAttack():0===e&&this.pos[0]>100||t[e-1].pos[0]<this.pos[0]-60?this.walk():this.idle()}walk(){ctx.drawImage(this.sprite,h*this.walkLoop[this.walkIndex],22,h,22,this.pos[0],this.pos[1],84,44),this.walkIndex++,this.walkIndex>=this.walkLoop.length&&(this.walkIndex=0)}animateAttack(){ctx.drawImage(this.sprite,h*this.attackLoop[this.attackIndex],44,h,22,this.pos[0],this.pos[1],84,44),this.attackIndex++,this.attackIndex>=this.attackLoop.length&&(this.attackIndex=0)}idle(){ctx.drawImage(this.sprite,h*this.idleLoop[this.idleIndex],88,h,22,this.pos[0],this.pos[1],84,44),this.idleIndex++,this.idleIndex>=this.idleLoop.length&&(this.idleIndex=0)}die(t,e){ctx.drawImage(this.sprite,h*this.dieLoop[this.dieIndex],110,h,22,this.pos[0],this.pos[1],84,44),this.dieIndex++,this.dieIndex>=this.dieLoop.length&&(this.grantXP(e),t.shift())}}},742:(t,e,s)=>{const i=s(657),h=73,a=46;t.exports=class extends i{constructor(){super(15,.7,6,2,[650,290],"Red Ogre",10,35),this.sprite=new Image,this.sprite.src="./images/enemy/monsters/RedOgre/red-ogre-Sheet.png",this.walkLoop=[0,1,2,3,4],this.walkIndex=0,this.attackLoop=[0,1,2,3,4,0,1,2,3,4],this.attackIndex=0,this.dieLoop=[0,1,2,3,4,0,1,2],this.dieIndex=0,this.idleLoop=[0,1,2,3],this.idleIndex=0}draw(t,e,s){this.healthBar.draw([this.pos[0]+50,this.pos[1]-5]),this.currHealth<=0?this.die(t,s):0===e&&this.pos[0]<=100?this.animateAttack():0===e&&this.pos[0]>100||t[e-1].pos[0]<this.pos[0]-60?this.walk():this.idle()}idle(){ctx.drawImage(this.sprite,h*this.idleLoop[this.idleIndex],0,h,a,this.pos[0],this.pos[1],146,92),this.idleIndex++,this.idleIndex>=this.idleLoop.length&&(this.idleIndex=0)}walk(){ctx.drawImage(this.sprite,h*this.walkLoop[this.walkIndex],a,h,a,this.pos[0],this.pos[1],146,92),this.walkIndex++,this.walkIndex>=this.walkLoop.length&&(this.walkIndex=0)}animateAttack(){let t=this.attackIndex>4?3:2;ctx.drawImage(this.sprite,h*this.attackLoop[this.attackIndex],a*t,h,a,this.pos[0],this.pos[1],146,92),this.attackIndex++,this.attackIndex>=this.attackLoop.length&&(this.attackIndex=0)}die(t,e){let s=this.dieIndex>4?5:4;this.dieIndex>4&&(s=5),ctx.drawImage(this.sprite,h*this.dieLoop[this.dieIndex],a*s,h,a,this.pos[0],this.pos[1],146,92),this.dieIndex++,this.dieIndex>=this.dieLoop.length&&(this.grantXP(e),t.shift())}}},829:(t,e,s)=>{const i=s(657),h=68,a=46;t.exports=class extends i{constructor(){super(15,.7,5,0,[650,300],"Satyr",10,15),this.sprite=new Image,this.sprite.src="./images/enemy/monsters/Satyr/satyr-Sheet.png",this.walkLoop=[0,1,2,3,4],this.walkIndex=0,this.attackLoop=[0,1,2,3,4],this.attackIndex=0,this.dieLoop=[0,1,2,3,4,0,1,2],this.dieIndex=0,this.idleLoop=[0,1,2,3],this.idleIndex=0}draw(t,e,s){this.healthBar.draw([this.pos[0]+50,this.pos[1]-5]),this.currHealth<=0?this.die(t,s):0===e&&this.pos[0]<=100?this.animateAttack():0===e&&this.pos[0]>100||t[e-1].pos[0]<this.pos[0]-60?this.walk():this.idle()}idle(){ctx.drawImage(this.sprite,h*this.idleLoop[this.idleIndex],0,h,a,this.pos[0],this.pos[1],136,92),this.idleIndex++,this.idleIndex>=this.idleLoop.length&&(this.idleIndex=0)}walk(){ctx.drawImage(this.sprite,h*this.walkLoop[this.walkIndex],a,h,a,this.pos[0],this.pos[1],136,92),this.walkIndex++,this.walkIndex>=this.walkLoop.length&&(this.walkIndex=0)}animateAttack(){ctx.drawImage(this.sprite,h*this.attackLoop[this.attackIndex],92,h,a,this.pos[0],this.pos[1],136,92),this.attackIndex++,this.attackIndex>=this.attackLoop.length&&(this.attackIndex=0)}die(t,e){let s=4;this.dieIndex>4&&(s=5),ctx.drawImage(this.sprite,h*this.dieLoop[this.dieIndex],a*s,h,a,this.pos[0],this.pos[1],136,92),this.dieIndex++,this.dieIndex>=this.dieLoop.length&&(this.grantXP(e),t.shift())}}},891:t=>{const e={getRandomInt:(t,e)=>(t=Math.ceil(t),e=Math.floor(e),Math.floor(Math.random()*(e-t)+t))};t.exports=e},401:(t,e,s)=>{const i=s(657),h=73,a=43;t.exports=class extends i{constructor(){super(25,.8,15,1,[650,300],"Werewolf",10,30),this.lifeSteal=.3,this.sprite=new Image,this.sprite.src="./images/enemy/monsters/Werewolf/werewolf-Sheet.png",this.walkLoop=[0,1,2,3,4],this.walkIndex=0,this.attackLoop=[0,1,2,3,4,0,1,2,3,4],this.attackIndex=0,this.dieLoop=[0,1,2,3,4,0,1,2],this.dieIndex=0,this.idleLoop=[0,1,2,3],this.idleIndex=0}draw(t,e,s){this.healthBar.draw([this.pos[0]+50,this.pos[1]-5]),this.currHealth<=0?this.die(t,s):0===e&&this.pos[0]<=100?this.animateAttack():0===e&&this.pos[0]>100||t[e-1].pos[0]<this.pos[0]-60?this.walk():this.idle()}idle(){ctx.drawImage(this.sprite,h*this.idleLoop[this.idleIndex],0,h,a,this.pos[0],this.pos[1],146,86),this.idleIndex++,this.idleIndex>=this.idleLoop.length&&(this.idleIndex=0)}walk(){ctx.drawImage(this.sprite,h*this.walkLoop[this.walkIndex],a,h,a,this.pos[0],this.pos[1],146,86),this.walkIndex++,this.walkIndex>=this.walkLoop.length&&(this.walkIndex=0)}animateAttack(){let t=this.attackIndex>4?3:2;ctx.drawImage(this.sprite,h*this.attackLoop[this.attackIndex],a*t,h,a,this.pos[0],this.pos[1],146,86),this.attackIndex++,this.attackIndex>=this.attackLoop.length&&(this.attackIndex=0)}die(t,e){let s=this.dieIndex>4?5:4;this.dieIndex>4&&(s=5),ctx.drawImage(this.sprite,h*this.dieLoop[this.dieIndex],a*s,h,a,this.pos[0],this.pos[1],146,86),this.dieIndex++,this.dieIndex>=this.dieLoop.length&&(this.grantXP(e),t.shift())}}}},e={};function s(i){var h=e[i];if(void 0!==h)return h.exports;var a=e[i]={exports:{}};return t[i](a,a.exports,s),a.exports}(()=>{const t=s(535),e=document.getElementById("game-canvas");e.width=700,e.height=400;const i=e.getContext("2d");window.ctx=i;const h=new t(i);h.pause();const a=document.getElementById("overlay"),n=document.getElementById("overlay-instructions");document.getElementById("instructions-button").addEventListener("click",(()=>{n.style.display="none",a.style.display="none",document.getElementById("overlay-options").style.display="flex",h.play()})),document.getElementById("restart-button").addEventListener("click",(()=>{document.getElementById("overlay-end").style.display="none",window.location.reload()})),document.getElementById("restart-button2").addEventListener("click",(()=>{document.getElementById("overlay-win").style.display="none",window.location.reload()}));const o=document.getElementById("speed-slider");o.addEventListener("change",(()=>{h.slideSpeed(o.value)})),window.requestAnimationFrame((()=>h.step()))})()})();